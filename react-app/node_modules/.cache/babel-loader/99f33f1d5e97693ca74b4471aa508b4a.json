{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\CelestDoll\\\\Projet Nodejs\\\\Blog\\\\react-app\\\\src\\\\components\\\\singlePost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport './singlepost.css';\nimport { useParams } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [post, setPost] = useState();\n  const [modify, setModify] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [isPublished, setIsPublished] = useState();\n  const {\n    user\n  } = useContext(Context);\n  const PF = 'http://localhost:3000/public/images/';\n  useEffect(() => {\n    console.log(\"hi\");\n\n    const getPost = async () => {\n      const res = await axios.get(`http://localhost:3000/api/posts/${id}`);\n      setPost(res.data);\n      setIsPublished(res.data.isPublished);\n      console.log(post);\n      setTitle(post.title);\n      setDesc(post.desc);\n    };\n\n    getPost();\n  }, [id]);\n\n  const handleChange = () => {\n    setModify(true);\n  };\n\n  const confirmChange = async () => {\n    setModify(false);\n\n    try {\n      const data = {\n        title,\n        desc,\n        username: user.username,\n        isPublished\n      };\n\n      if (isPublished) {\n        data.isPublished = true;\n      }\n\n      console.log(data);\n      const res = await axios.put(`http://localhost:3000/api/posts/${id}`, data);\n      res && window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      console.log(post);\n      const res = await axios.delete(`http://localhost:3000/api/posts/${id}`, {\n        data: {\n          username: post.username\n        }\n      });\n\n      if (res) {\n        alert(\"Your post has been deleted\");\n        window.location = \"/\";\n      }\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: post && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"Blog Post\",\n        className: \"postImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), !modify ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-pen-to-square\",\n            onClick: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-trash-can\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"singlePostTitleInput\",\n        onChange: e => setTitle(e.target.value),\n        defaultValue: post.title,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", post.username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), !modify ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"singlePostDescInput\",\n          defaultValue: post.desc,\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"draftOrPublished\",\n          defaultChecked: isPublished,\n          onChange: e => setIsPublished(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: confirmChange,\n          className: \"ConfirmBtn\",\n          children: [\"Confirm Changes\", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa-solid fa-check\",\n            style: {\n              paddingLeft: '1em'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 83\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"O2dzAXzLlPU01bekt/wdUJr+WnQ=\", false, function () {\n  return [useParams];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Desktop/CelestDoll/Projet Nodejs/Blog/react-app/src/components/singlePost/SinglePost.jsx"],"names":["useParams","useContext","useEffect","useState","axios","Link","Context","SinglePost","id","post","setPost","modify","setModify","title","setTitle","desc","setDesc","file","setFile","categories","setCategories","isPublished","setIsPublished","user","PF","console","log","getPost","res","get","data","handleChange","confirmChange","username","put","window","location","reload","err","handleDelete","delete","alert","photo","e","target","value","Date","createdAt","toDateString","age","checked","paddingLeft"],"mappings":"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","sourcesContent":["import './singlepost.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Context } from '../../context/Context';\r\n\r\nexport default function SinglePost() {\r\n\r\n\r\n  let { id } = useParams()\r\n  const [post, setPost] = useState()\r\n  const [ modify, setModify] = useState(false)\r\n  const [title, setTitle] = useState(\"\")\r\n  const [desc, setDesc] = useState(\"\")\r\n  const [file, setFile] = useState(null)\r\n  const [categories, setCategories] = useState([])\r\n  const [ isPublished, setIsPublished] = useState()\r\n  const {user} = useContext(Context)\r\n\r\n  const PF ='http://localhost:3000/public/images/'\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log(\"hi\")\r\n    const getPost = async () =>{\r\n      const res = await axios.get(`http://localhost:3000/api/posts/${id}`)\r\n      setPost(res.data)\r\n      setIsPublished(res.data.isPublished)\r\n      console.log(post)\r\n      setTitle(post.title)\r\n      setDesc(post.desc)\r\n    }\r\n    getPost()\r\n  },[id])\r\n\r\n  const handleChange = () => {\r\n    setModify(true)\r\n  }\r\n  const confirmChange = async() => {\r\n    setModify(false)\r\n    try {\r\n\r\n      const data =  {\r\n        title,\r\n        desc,\r\n        username: user.username,\r\n        isPublished\r\n       }\r\n       if(isPublished) {\r\n         data.isPublished = true\r\n       }\r\n       console.log(data)\r\n      \r\n      const res = await axios.put(`http://localhost:3000/api/posts/${id}`, data)\r\n      res && window.location.reload()\r\n    }\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  const handleDelete = async() => {\r\n    try{\r\n      console.log(post)\r\n      const res = await axios.delete(`http://localhost:3000/api/posts/${id}`, { data: { username: post.username } })\r\n      if(res){\r\n        alert(\"Your post has been deleted\")\r\n        window.location = \"/\"\r\n      }\r\n    }\r\n    catch(err){\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"singlePost\">\r\n      {post && ( \r\n        <div className=\"singlePostWrapper\">\r\n          {post.photo && (\r\n              <img src={PF + post.photo}\r\n              alt=\"Blog Post\" \r\n              className=\"postImg\" />\r\n              )}\r\n\r\n\r\n          {!modify ? (\r\n             <h1 className=\"singlePostTitle\">{post.title}\r\n                <div className=\"singlePostEdit\">\r\n                  <i className=\"singlePostIcon fa-solid fa-pen-to-square\" onClick={handleChange}></i>\r\n                  <i className=\"singlePostIcon fa-solid fa-trash-can\" onClick={handleDelete}></i>\r\n                </div>\r\n               </h1>\r\n          ) : (\r\n            <input\r\n              type=\"text\"\r\n              className=\"singlePostTitleInput\" \r\n              onChange={e => setTitle(e.target.value)} \r\n              defaultValue={post.title}\r\n              autoFocus>\r\n            </input> \r\n          )\r\n          }\r\n          <div className=\"singlePostInfo\">\r\n              <span className=\"singlePostAuthor\">Author:\r\n                <Link to={`/?user=${post.username}`} className=\"link\">\r\n                <b> {post.username} </b>\r\n                </Link>\r\n               </span>\r\n              <span className=\"singlePostDate\">{new Date(post.createdAt).toDateString()}</span>\r\n          </div>\r\n          <p className=\"singlePostDesc\">{post.age}</p>\r\n          {!modify ? (\r\n            <p className=\"singlePostDesc\">{post.desc}</p>\r\n          ) : (\r\n            <>\r\n            <input type=\"text\" className=\"singlePostDescInput\" defaultValue={post.desc} onChange={e => setDesc(e.target.value)}></input>\r\n            <input type=\"checkbox\" className='draftOrPublished' defaultChecked={isPublished} onChange={e => setIsPublished(e.target.checked)}/>\r\n            <button onClick={confirmChange} className=\"ConfirmBtn\">Confirm Changes<i class=\"fa-solid fa-check\" style={{paddingLeft:'1em'}}></i></button>\r\n            </>\r\n          )}\r\n\r\n          {/* {!isPublished ? (\r\n              <button onClick={(e => setIsPublished(true)) && confirmChange } className=\"ConfirmBtn\">Publish</button>\r\n          ):\r\n              <button onClick={(e) => {setIsPublished(false);confirmChange} } className=\"ConfirmBtn\">Draft</button>\r\n          } */}\r\n          \r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}